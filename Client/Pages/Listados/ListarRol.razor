@page "/Rols"
<PageTitle>Listado de Rols</PageTitle>

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@using System.Net.Http.Json
@using MudBlazor

@using GestionProyectos.Shared.Models
@using GestionProyectos.Client.Services.Contrato

@inject IRolService _rolServicio
@inject HttpClient httpClient
@inject ISnackbar Snackbar

@inject NavigationManager _navManager

@attribute [Authorize(Roles = "Administrador")]

<MudButton Href="/Rols/agregar/0"
           Variant="Variant.Filled"
           EndIcon="@Icons.Material.Filled.AddCircle"
           Color="Color.Primary" Class="mb-2">
    Agregar Rol
</MudButton>

<MudTable Items="@RolDTOs" Dense="@dense" Hover="@hover" ReadOnly="false" CanCancelEdit="@canCancelEdit" Filter="new Func<RolDTO,bool>(FilterFunc)"
          @bind-SelectedItem="selectedItem1" SortLabel="Ordenar por" EditTrigger="TableEditTrigger.EditButton">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Listado de Roles</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Buscar" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width:50px;" />
        <col/>
        <col style="width:50px;" />
        <col style="width:50px;" />
    </ColGroup>
    <HeaderContent>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<RolDTO, object>(x=>x.IdRol)">ID</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<RolDTO, object>(x=>x.Nombre)">Nombre</MudTableSortLabel></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.IdRol</MudTd>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd><MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="() => ModificarRol(context.IdRol)" /></MudTd>
        <MudTd><MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Class="pa-0" OnClick="() => EliminarRol(context.IdRol)" /></MudTd>
    </RowTemplate>

    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>

@code {
    private List<string> editEvents = new();
    private bool dense = false;
    private bool hover = true;
    private bool ronly = false;
    private bool canCancelEdit = false;
    private bool blockSwitch = false;
    private string searchString = "";
    private RolDTO selectedItem1 = null;

    private HashSet<RolDTO> selectedItems1 = new HashSet<RolDTO>();

    private IEnumerable<RolDTO> RolDTOs = new List<RolDTO>();

    protected override async Task OnInitializedAsync()
    {
        RolDTOs = await _rolServicio.ListarRols();
    }

    private bool FilterFunc(RolDTO RolDTO)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (RolDTO.Nombre.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (RolDTO.IdRol.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private void ModificarRol(int id)
    {
        _navManager.NavigateTo($"/Rols/modificar/{id}");
    }

    private void EliminarRol(int id)
    {
        _navManager.NavigateTo($"/Rols/eliminar/{id}");
    }
}