@page "/Proyectos"
<PageTitle>Listado de Usuarios</PageTitle>

@using GestionProyectos.Client.Extensions
@attribute [DynamicNavMenu("Proyectos")]

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@using System.Net.Http.Json
@using MudBlazor

@using GestionProyectos.Shared.Models
@using GestionProyectos.Client.Services.Contrato

@inject IProyectoService _proyectoServicio
@inject HttpClient httpClient
@inject ISnackbar Snackbar

@inject NavigationManager _navManager

@attribute [Authorize(Roles = "Administrador")]

<MudButton Href="/Proyectos/agregar/0"
           Variant="Variant.Filled"
           EndIcon="@Icons.Material.Filled.AddCircle"
           Color="Color.Primary" Class="mb-2">
    Agregar Usuario
</MudButton>

<MudTable Items="@ProyectoDTOs" Dense="@dense" Hover="@hover" ReadOnly="false" CanCancelEdit="@canCancelEdit" Filter="new Func<ProyectoDTO,bool>(FilterFunc)"
    @bind-SelectedItem="selectedItem1" SortLabel="Ordenar por" EditTrigger="TableEditTrigger.EditButton">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Listado de Proyectos</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Buscar" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width:50px;" />
        <col style="width:80px;" />
        <col style="width:50%;" />
        <col />
        <col />
        <col style="width:50px;" />
        <col style="width:50px;" />
    </ColGroup>
    <HeaderContent>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<ProyectoDTO, object>(x=>x.IdProyecto)">ID</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ProyectoDTO, object>(x=>x.Nombre)">Nombre</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ProyectoDTO, object>(x=>x.Descripcion)">Descripción</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ProyectoDTO, object>(x=>x.IdClienteNavigation.Nombre)">Cliente</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ProyectoDTO, object>(x=>x.FechaInicio)">Fecha de Inicio</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ProyectoDTO, object>(x=>x.FechaFin)">Fecha de Fin</MudTableSortLabel></MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.IdProyecto</MudTd>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd DataLabel="Descripción">@context.Descripcion</MudTd>
        <MudTd DataLabel="Cliente">@context.IdClienteNavigation.Nombre</MudTd>
        <MudTd DataLabel="Fecha de Inicio">@context.FechaInicio</MudTd>
        <MudTd DataLabel="Fecha de Fin">@context.FechaFin</MudTd>
        <MudTd><MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="() => ModificarProyecto(context.IdProyecto)" /></MudTd>
        <MudTd><MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Class="pa-0" OnClick="() => EliminarProyecto(context.IdProyecto)" /></MudTd>
    </RowTemplate>

    <PagerContent>
        <MudTablePager />
    </PagerContent>
 </MudTable>

 <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>

@code {
    private List<string> editEvents = new();
    private bool dense = false;
    private bool hover = true;
    private bool ronly = false;
    private bool canCancelEdit = false;
    private bool blockSwitch = false;
    private string searchString = "";
    private ProyectoDTO selectedItem1 = null;

    private HashSet<ProyectoDTO> selectedItems1 = new HashSet<ProyectoDTO>();

    private IEnumerable<ProyectoDTO> ProyectoDTOs = new List<ProyectoDTO>();

    protected override async Task OnInitializedAsync()
    {
        ProyectoDTOs = await _proyectoServicio.ListarProyectos();
    }

    private bool FilterFunc(ProyectoDTO proyectoDTO)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (proyectoDTO.Nombre.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (proyectoDTO.IdProyecto.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (proyectoDTO.IdClienteNavigation.Nombre.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{proyectoDTO.IdClienteNavigation.Nombre} {proyectoDTO.Nombre}".Contains(searchString))
            return true;
        return false;
    }

    private void ModificarProyecto(int id)
    {
        _navManager.NavigateTo($"/Proyectos/modificar/{id}");
    }

    private void EliminarProyecto(int id)
    {
        _navManager.NavigateTo($"/Proyectos/eliminar/{id}");
    }
}