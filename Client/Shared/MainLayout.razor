@inherits LayoutComponentBase
@inject SweetAlertService Swal;
@inject NavigationManager _navigationManager;
@inject AuthenticationStateProvider autenticacionProvider;  

@using GestionProyectos.Client.Extensions;
@using GestionProyectos.Client.Shared.DynamicNavMenu;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <AuthorizeView Roles="Administrador">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        </AuthorizeView>
        Sistema de Gestion de Proyectos
        <MudSpacer />
@*         <AuthorizeView Roles="Administrador"> *@
            
@*             <NotAuthorized>
                <MudLink Href="./Login" Typo="Typo.body2" Class="mud-theme-primary">Iniciar Sesion</MudLink>
            </NotAuthorized> *@
        <AuthorizeView>
        <Authorized>
            <MudText Typo="Typo.h6" Class="px-4">@context.User.Claims.Where(c=>c.Type == ClaimTypes.Name).Select(c=>c.Value).SingleOrDefault()</MudText>
            <MudLink Href="./Login" Typo="Typo.body2" Class="mud-theme-primary" @onclick="CerrarSesion">Cerrar Sesion</MudLink>
        </Authorized>
        </AuthorizeView>
    </MudAppBar>
    <AuthorizeView Roles="Administrador"> 
        <MudDrawer @bind-Open="@_drawerOpen">
            <MudPaper Width="250px" Class="py-3" Elevation="0">
                    @* <MudNavMenu>
               
                        <MudDivider Class="my-2" />

                        <MudNavLink Href="/">Inicio</MudNavLink>


                            <MudNavGroup Title="Usuarios" Expanded="true">
                                <MudNavLink Href="/Usuarios/Listado">Listado</MudNavLink>
                                <MudNavLink Href="/Usuarios/Grupos">Grupos de Usuario</MudNavLink>
                            </MudNavGroup>


                        <MudNavLink Href="/about">About us</MudNavLink>
                    </MudNavMenu> *@

                    <DynamicNavMenu />
            </MudPaper>
        </MudDrawer>
    </AuthorizeView>
    <MudMainContent MaxWidth="MaxWidth.Small">
        <MudContainer Class="mx-auto mt-16" >
                        @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task CerrarSesion()
    {
        bool t = true;
        // SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
        //     {
        //         Title = "Desea cerrar sesion?",
        //         Icon = SweetAlertIcon.Warning,
        //         ShowCancelButton = true,
        //         ConfirmButtonText = "Si",
        //         CancelButtonText = "No",
        //     });

        //result.IsConfirmed


        if (t)
        {
            var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(null);
            
            _navigationManager.NavigateTo("/login", true);
        }
    }
}

@* <div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div> *@
 